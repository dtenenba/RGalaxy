%\VignetteIndexEntry{Adding R functions to Galaxy}
%\VignettePackage{RGalaxy}

\documentclass{article}
\usepackage{Sweave,fullpage}
\usepackage{url}


\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}

\newcommand{\software}[1]{\textsf{#1}}
\newcommand{\R}{\software{R}}
\newcommand{\RGalaxy}{\Rpackage{RGalaxy}}
\newcommand{\galaxify}{\Rcode{galaxify}}

\title{Adding R functions to Galaxy}
\author{Dan Tenenbaum}

\begin{document}
\maketitle


\tableofcontents

\section{Introduction}

Galaxy 
(\url{http://galaxy.psu.edu/})
is an open, web-based platform for data intensive biomedical research. It provides
an easy-to-use web interface and can expose bioinformatics workflows written in any 
programming language.

Normally, in order to expose new functionality (a tool in Galaxy parlance) in a Galaxy
instance, you have to manually create an XML file with information about the function,
and modify an additional XML file.

The \RGalaxy{} package automates this process, pulling most of the necessary 
information from the function itself and its manual page (you provide the
remaining information as arguments to the \Rcode{galaxify()} function).

\section{Best Practices For Writing 'Galaxifiable' Functions}

Any error conditions
should be handled with \Rcode{stop} with a useful/informative error
message. The Galaxy user will see these messages if an error occurs.

Functions which take datasets as input should accept as arguments
the filenames pointing to those datasets. The Galaxy user interface
will allow the user to chose the dataset graphically.

Return values of functions are ignored. Function output should be
written to one or more files, and the names of these files should
be passed into the function as arguments.

Functions should be documented with a manual page. \galaxify{}
will use this manual page to fill in relevant sections of the
Galaxy XML file. The following sections of the man page are required:

\begin{itemize}
\item {\bf alias}
\item {\bf title}
\item {\bf description}
\item {\bf arguments} - each argument must be documented
\item {\bf details}
\end{itemize}

The following example illustrates these best practices (this function
is in the \RGalaxy{} package under the name \Rcode{functionToGalaxify}:

% it would be really nice if comments would show up in this function
<<exampleFunction, eval=true, echo=false>>=
library(RGalaxy)
show(functionToGalaxify)
@

\section{Function Dependencies}

You are responsible for making sure that the machine where Galaxy is running
has all the appropriate dependcies installed. This includes R packages as 
well as any external programs.


\section{Installing and Starting Galaxy}

Refer to the page \url{http://wiki.g2.bx.psu.edu/Admin/Get%20Galaxy}.

Follow the steps for installing and starting Galaxy. In a nutshell:

\begin{verbatim}
hg clone https://bitbucket.org/galaxy/galaxy-dist/
cd galaxy-dist
./run.sh --reload
\end{verbatim}

Heed the tip about starting Galaxy with the "--reload" option so that
it can be easily stopped (with control-C) and restarted.


\section{Galaxifying a Function}

Now that you have written a function that follows the best practices
described above, you can make it available to Galaxy as follows:

<<hidden-setup, echo=false, results=hide>>=
galaxy.home <- getwd()
tool.dir <- "RGalaxy_test_tool"
func.name <- "functionToGalaxify"

#dir.create(galaxy.home, recursive=TRUE, showWarnings=FALSE)
file.copy(system.file("galaxy", "tool_conf.xml", package="RGalaxy"),
    file.path(galaxy.home, "tool_conf.xml"), overwrite=FALSE)

@

First, we have to tell \galaxify{} about the arguments to your function.

<<galaxify-params>>=
params <- list(
    GalaxyParam(name="inputfile1", type="data", label="Matrix 1"),
    GalaxyParam(name="inputfile2", type="data", label="Matrix 2"),
    GalaxyParam(name="plotTitle", type="text", label="Plot Title"),
    GalaxyParam(name="plotSubTitle", type="text", label="Plot Subtitle"),
    GalaxyParam(name="outputfile1", type="output", format="csv"),
    GalaxyParam(name="outputfile2", type="output", format="pdf"))
@

Now we can invoke the \galaxify{} function to create/modify the necessary
XML:

<<galaxify-function, results=hide>>=
galaxify(functionToGalaxify,
    "functionToGalaxify",
    manpage="functionToGalaxify",
    galaxy.home= getwd(), 
    name="Add", 
    package="RGalaxy",
    param.list=params,
    tool.dir="mytool",
    section.name="Test Section",
    section.id="testSectionId")
@

\section{Did it work?}

Let's check whether it worked. If Galaxy is running, interrupt it with control-C.
(with the default local installation, Galaxy will not automatically detect when
a new tool has been added; it must be restarted). Restart Galaxy like so:

\begin{verbatim}
./run.sh --reload
\end{verbatim}

You can then go to Galaxy in your web browser at the URL
\url{http://localhost:8080}.

First you need to upload some sample data sets to Galaxy.

In R, you can obtain the path to the data sets as follows:

<<datasets>>=
system.file("extdata", "a.tsv", package="RGalaxy")
system.file("extdata", "b.tsv", package="RGalaxy")
@



You can then upload these data sets to Galaxy by clicking Get Data, 
then Upload File. You only need to do this once for each Galaxy
installation.

\includegraphics[width=0.4\textwidth]{screenshot1.jpg}

The section we added above, called "Test Section", is visible (note that many
tools have been removed from this Galaxy installation for clarity).

If we click on "Test Section", then we see the tool that has been created:

\includegraphics{screenshot3.jpg}

Most of this information came from our function and its man page.

If your function or its man page changes, just run \galaxify{} again.
You will need to restart Galaxy to see the changes.

\section{Sharing Your Galaxy Tool}

To share your Galaxy tool with a wider audience, you need to move 
it to a production instance of Galaxy. The files you'll need to move are 
GALAXY\_HOME/tool\_conf.xml (or maybe just the section that was 
created by \galaxify{}), and the directory with your tool files
(in our example, that was GALAXY\_HOME/mytool). 


\end{document}
